- name : to set up backend server
  hosts: backend
  become : yes
  vars:
    login_password: ExpenseApp@1
    login_db_host: db.devops-project.site

  tasks: 
  - name : To disable node js
    ansible.builtin.command : dnf module disable nodejs -y

  - name : To enable node js 20 -version
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: to install node js & mysql
    ansible.builtin.dnf:
      name : "{{item}}"
      state : installed
    loop: 
      - nodejs
      - mysql

  - name: to create expense 
    ansible.builtin.user:
     name : expence 
  
  - name: Create a directory if it does not exist
    ansible.builtin.file:
     path: /app
     state: directory
  - name: Download application code
    ansible.builtin.get_url:
     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
     dest: /tmp/backend.zip
    

  - name: Unarchive a file that is already on the remote machine
    ansible.builtin.unarchive:
     src: /tmp/backend.zip
     dest: /app
     remote_src: yes
  
  - name : install dependencies
    ansible.builtin.command: npm install
    args: 
      chdir: /app

  - name : copy the backend service
    ansible.builtin.copy:
     src: backend.service
     dest: /etc/systemd/system/backend.service

  - name: installing python mysql dependecies
    ansible.builtin.pip:
      name: 
        - PyMySQL
        - cryptography
      executable: pip3.9

  - name: To check the DB connection and dump the data 
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ login_password }}"
      login_host: "{{ login_db_host }}"
      target: /app/schema/backend.sql
      state: import
      name: all

  - name : deamon reload
    ansible.builtin.systemd_service: 
     deamon_reload: true

  - name : start and enable backend
    ansible.builtin.service:
     name : backend
     state: started 
     enabled: yes
